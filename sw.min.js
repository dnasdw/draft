(()=>{var a=1,d=["/draft/css/style.min.css","/draft/js/theme.min.js","/draft/site.webmanifest"],m=["/draft/css/style.min.css","/draft/js/theme.min.js","/draft/site.webmanifest","/draft/offline"],E=["/draft/css/style.min.css","/draft/js/theme.min.js","/draft/site.webmanifest","/draft/404.html"],g="/draft/offline",C="/draft/404.html",i={assets:"assets-v"+a,content:"content-v"+a,offline:"offline-v"+a,notFound:"404-v"+a},u={"/":3600,html:3600,json:86400,js:86400,css:86400},h=[t=>!t.startsWith("http://localhost")],_=["GET"];function A(t){return h.length>0?!h.filter(e=>typeof e=="function"?!e(t):!1).length:!1}function F(t){let e=t.split(".").reverse()[0].split("?")[0];return e.endsWith("/")?"/":e}function L(t){if(typeof t=="string"){let e=F(t);return typeof u[e]=="number"?u[e]:null}else return null}function O(){return Promise.all([caches.open(i.assets).then(t=>t.addAll(d)),caches.open(i.offline).then(t=>t.addAll(m)),caches.open(i.notFound).then(t=>t.addAll(E))]).then(()=>self.skipWaiting())}function T(){let t=Object.keys(i).map(e=>i[e]);return new Promise((e,s)=>{caches.keys().then(n=>n.filter(r=>!~t.indexOf(r))).then(n=>{n.length?Promise.all(n.map(r=>caches.delete(r))).then(()=>{e()}).catch(r=>{s(r)}):e()}).catch(n=>{s(n)})})}self.addEventListener("install",t=>{t.waitUntil(Promise.all([O(),self.skipWaiting()]))});self.addEventListener("activate",t=>{t.waitUntil(Promise.all([T(),self.clients.claim(),self.skipWaiting()]).catch(e=>{console.log(e),self.skipWaiting()}))});self.addEventListener("fetch",t=>{t.respondWith(caches.open(i.content).then(e=>e.match(t.request).then(s=>{if(s){let n=s.headers.entries(),r=null;for(let c of n)c[0]==="date"&&(r=new Date(c[1]));if(r){let c=parseInt((new Date().getTime()-r.getTime())/1e3),o=L(t.request.url);return o&&c>o?new Promise(l=>fetch(t.request.clone()).then(f=>{f?(e.put(t.request,f.clone()),l(f)):l(s)}).catch(()=>{l(s)})).catch(l=>(console.log(l),s)):s}else return s}else return null}).then(s=>s||fetch(t.request.clone()).then(n=>n.status<400?(~_.indexOf(t.request.method)&&!A(t.request.url)&&t.request.url.slice(0,4)==="http"&&e.put(t.request,n.clone()),n):caches.open(i.notFound).then(r=>r.match(C))).then(n=>{if(n)return n}).catch(()=>caches.open(i.offline).then(n=>n.match(g)))).catch(s=>{throw console.error("  Error in fetch handler:",s),s})))});})();
